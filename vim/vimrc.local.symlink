" must be first line
set nocompatible

" terminal colors
set bg=dark
syntax enable
color solarized

" no swap
set nowb
set nobackup
set noswapfile

" defaults for window split behavior
set equalalways
set splitbelow
set splitright

" no word wrapping
set nowrap
set textwidth=0

" don't highlight line 
set nocursorline

" don't display tab or newline characters
set nolist

" check spelling
set spell

" highlight on incremental search
set hlsearch

" tab completion behave like bash
set wildmenu
set wildmode=longest,list

" tabs, not spaces
set tabstop=4
set shiftwidth=4
set softtabstop=4
set noexpandtab

" scrolling
" https://github.com/spf13/spf13-vim/blob/master/.vimrc
set scrolloff=5

" backspace 
set backspace=indent,eol,start

" smart indentation
set smartindent

" last status
set laststatus=2

" Switch on folding between all braces
set foldenable
set foldmethod=marker
set foldmarker={,}
set foldminlines=2
set foldlevelstart=99
set foldlevel=99

" surround word with quotes
nnoremap '' ysiw'
nnoremap "" ysiw"

" surround visual selection with quotes
vnoremap '' S'
vnoremap "" S"

" like J, but opposite order (prepends line below)
nnoremap K ddpkJ

" select pasted text
nnoremap gp `[v`]

" yank from the cursor to the end of the line, to be consistent with C and D.
nnoremap Y y$

" clear current search highlight with esc
noremap <esc> :noh<cr>

" makes ,w split windows vertically
nnoremap <leader>w <C-w>v<C-w>l

" split window navigation with ctrl
nnoremap <C-left> <C-w>h
nnoremap <C-down> <C-w>j
nnoremap <C-up> <C-w>k
nnoremap <C-right> <C-w>l

" move to leftmost/rightmost window with ctrl
nnoremap <C-h> :exe 0 . "wincmd w"<cr>
nnoremap <C-l> :exe -1 . "wincmd w"<cr>

" editing/viewing files in this directory
cnoremap %% <C-R>=expand('%:h').'/'<cr>

" sudo save
" http://www.reddit.com/r/vim/comments/kz84u/what_are_some_simple_yet_mindblowing_tweaks_to/
cnoremap w!! %!sudo tee > /dev/null %

" move cursor between wrapped lines
" http://vim.wikia.com/wiki/Move_cursor_by_display_lines_when_wrapping
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk
nnoremap <Down> gj
nnoremap <Up> gk
vnoremap <Down> gj
vnoremap <Up> gk

" switch between the last 2 files
nnoremap <leader><leader> <c-^>

" TODO: package this script in a nicer plugin
" reveal in finder (false parameter means open in background)
nnoremap <leader>R :silent !osascript ~/.vim/findercd.scpt %:p:h false<cr>

" JSLint
let $JS_CMD='node'

" Rails.vim
let g:rails_statusline = 0

" CtrlP 
let g:ctrlp_working_path_mode = 0
nnoremap <D-p> :CtrlP<cr>
nnoremap <C-t> :CtrlPMRU<cr>
nnoremap <D-t> :CtrlPMRU<cr>

" QuickRun
nnoremap <D-r> :QuickRun<cr>

" NERDTree
let g:NERDTreeChDirMode = 2
nnoremap <leader>r :NERDTreeFindHighlight<cr>

" automatically keep pwd updated when changing windows
function! ChangeDirectoryToNERDTreeDir()
	" don't do anything if we're restoring a session
	if exists("g:SessionLoad") && g:SessionLoad == 1
		return
	elseif exists("g:NERDTreeDirNode.GetRootForTab().path")
		silent echo g:NERDTreeDirNode.GetRootForTab().path.changeToDir()
	else
		let s:path = expand("%:p:h")
		" exe "cd" s:path
	endif
endfunction 

au WinEnter * call ChangeDirectoryToNERDTreeDir()

" find, then highlight file
function! NERDTreeFindHighlight()
	let s:filename = expand("%:t")
	
	NERDTreeFind
	silent! exe "normal /" . s:filename . "/\<cr>"
endfunction

command! NERDTreeFindHighlight call NERDTreeFindHighlight()
